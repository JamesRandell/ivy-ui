@import "../_modal.css"; /* Using a string */
@import "footer.css";
@import "_table.css";

* {box-sizing: border-box;}

html {
  font-family: Inter var,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";  
}

html, body {
    min-height: 100vh;
}
html {
  background-color: #fff
}
body {
    font-size: .8rem;
    font-weight:300;
    display: grid;
    grid-template-columns: [content] 100%;
    grid-template-rows: [content] 100%;
    background-color: var(--background);

}

body.connected {
  align-items: inherit;
  justify-content: inherit;
  grid-template-columns: [left] 50% [content] 50%;
  grid-template-rows: [content] 100%;
  background-color: var(--dark-bg);
}
body.connected.loggedin {
    grid-template-columns: [nav] 280px [content] auto;
    grid-template-rows: [header] 10px [content] calc(100vh - 10px - 100px) [footer] 200px;
    background-color: var(--background);
}
body > header,
body > nav,
body > main,
body > footer {
  display: none
}

body.connected.loggedin > header,
body.connected.loggedin > nav,
body.connected.loggedin > main,
body.connected.loggedin > footer {
  display: block
}

body.connected.loggedin > main {
  display: flex
}


body.connected.loggedin {
    background-color: var(--background);

}

body > header {
  grid-column: nav / content;
  grid-row: header
}

body > nav {
  grid-column-start: nav;
  grid-row-start: content;
  grid-row-end: end;
}


body > main {
  /* grow the content to the remainder of the space (works with padding!) */
  grid-column-start: content;
  grid-row-start: content    
}

body > footer {
  grid-column-start: content;
  grid-row-start: footer
}

/*
body > * {
  display: none
}
*/

body.connected > main {
  display: flex;
  align-items: center;
}
body.connected.loggedin > main {
  align-items: inherit;
}

error {
  padding: 2rem;
  position: absolute;
  left:calc(50% - 10rem);

  width:20rem;
  border-radius:0.5rem;
  top: 2rem;
  opacity: 0;
  transition: all 400ms ease;
  margin-top: -2rem;
  background-color: var(--error-bg);
}

error.visible {
  opacity: 1;
  margin-top: -1rem
}

.floating {
  box-shadow: 0 0 0 1px rgb(34 36 38 / 22%) inset, 
              0 2px 4px 0 rgb(34 36 38 / 12%), 
              0 2px 10px 0 rgb(34 36 38 / 15%);
}
h1, h2, h3, h4, h5, h6, p {
  text-rendering: optimizeLegibility;
}

h1, h2, h3, h4, h5, h6 {
  color: var(--header-color);
  letter-spacing: -.025em;
}
h1 {
  font-size: 2rem;
  font-weight: 800;
  line-height: 3rem;
  margin-top: 2rem
}
h2 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 2rem
}
h3 {
  font-size: 1.25rem;
  font-weight: 600;
}
h4 { 
  font-size:0.8rem;
  font-weight:600;
  line-height: 1rem;
  text-transform: uppercase;
}
h5 { 
  font-size:1rem;
  font-weight:300;
  line-height: 1.5rem
  
}
h6 { 
  font-size:1rem;
  font-weight:200;
  line-height: 1rem
  
}
p {
  
  line-height: 1.2rem;
  font-weight: 400;
  font-feature-settings: "salt";
  color: var(--text-color)
}

.status > p {
  font-size:0.825rem;
  line-height: 1.5rem
}
em {
  font-weight: 700;
  font-size: 0.7rem;
  color: #888
}





.color-alt {
  color: var(--color-alt)
}
.content {
    /*
    transition: transform ease-in 1000ms,
                filter ease-in 1000ms;
    */
    /*
    will-change: transform;
    */ /* fixes cpu to gpu handoff */
    

}

/**
 the flashy loading web socket connection indicator
 **/
.status {
  background-color: #fff;
  width:3rem;
  height: 3rem; 
  align-self: center;
  padding-top: 0.66rem;
  text-align:left;
  line-height: 1.5rem;
  padding-left:1rem;
  border-radius: 1.5rem;
  box-shadow: 0 0 5px var(--blur-color);
  transition: margin 250ms ease;
  transition: opacity 250ms ease;
  transition: width 250ms ease;
  will-change: transform;
  color:#fff;
  white-space: nowrap;
}

body .status {
  margin-left: auto;
  margin-right: auto;
}
body.connected .status {
    position:fixed;
    background-color: #fff;
    width:3rem;
    height: 3rem; 
    bottom:0px;
    right:0px;
    padding-top: 0.66rem;
    text-align:left;
    line-height: 1.5rem;
    padding-left:1rem;
    border-radius: 1.5rem 1.5rem 0 1.5rem;
    box-shadow: 0 0 5px var(--blur-color);
    transition: margin 250ms ease;
    transition: opacity 250ms ease;
    transition: width 250ms ease;
    will-change: transform;
    color:#fff;
    white-space: nowrap;
}

.status.error {

  border-top-left-radius: 0.75rem;
  border-bottom-left-radius: 0.75rem;
  color: #000
  
}

.status.error > p {
  transition: all 200ms ease-out;
}
.status.error > p > em {
  font-weight: 500;
  font-size: 0.9rem;
  color: #888
}
.status.error:before,
.status.error:after {
  border-color: var(--error-bg);
  animation-duration: 2.5s;
}

.status.warn:before,
.status.warn:after {
  border-color: var(--warn-bg);
  animation-duration: 2.5s;
}

.status.info:before,
.status.info:after {
  border-color: var(--info-bg);
}
body.loading main.content > * {

    animation: pageIn 300ms ease-in;
    animation-fill-mode: forwards;


    animation: pageOut 300ms ease-in;
    animation-fill-mode: forwards;
    

    /* 
    animation-duration: 1s;
    animation-name: slidein;
    animation-direction: reverse;
    */
    /*
    margin-left: -30px;
    */

    /* 
     *use translate instead of margin as we 
     *can do sub-pixel movement (less janky) 
     */
    /*
    transform: translateX(-10px);
    filter: blur(3px) grayscale(1) opacity(0);
    transition: translateX(10px);
    */
}


@keyframes pageOut {
    /* You could think of as "step 1" */
    0% {
        
    }
    /* You could think of as "step 2" */
    99% {
        filter: blur(3px) grayscale(1) opacity(0);
        transform: translateX(-10px);
        
    }
    100% {
        transform: translateX(10px);
        opacity: 0;
    }
  }

  @keyframes pageIn {
    0% {
      filter: opacity(0);
      transform: translateX(10px);
  }
    /* You could think of as "step 1" */
    1% {
        filter: blur(3px) grayscale(1) opacity(0);
        transform: translateX(10px);
    }
    /* You could think of as "step 2" */
    100% {
        filter: blur(0px) grayscale(0) opacity(1);
        transform: translateX(0);
    }
}


body.connected .pulse {
    display: block;
  }
  
.pulse:before, .pulse:after {
    content: '';
    border-radius: 50%;
    width: 1.5rem;
    height: 1.5rem;
    position: absolute;
    right: 0.65rem;
    top: 10px;
}

.pulse.connected:before,
.pulse.connected:after {
  border: 0.1rem solid green;
}

.pulse.disconnected:before,
.pulse.disconnected:after {
  border: 0.1rem solid red;
}
.pulse:before {
    -webkit-transform: scale(1, 1);
        -ms-transform: scale(1, 1);
            transform: scale(1, 1);
    opacity: 1;
    -webkit-animation: spWaveBe 1.5s infinite linear;
            animation: spWaveBe 1.5s infinite linear;
  }
  
  .pulse:after {
    -webkit-transform: scale(0, 0);
        -ms-transform: scale(0, 0);
            transform: scale(0, 0);
    opacity: 0;
    -webkit-animation: spWaveAf 1.5s infinite linear;
            animation: spWaveAf 1.5s infinite linear;
  }

  @-webkit-keyframes spWaveAf {
    from {
      -webkit-transform: scale(0.5, 0.5);
              transform: scale(0.5, 0.5);
      opacity: 0;
    }
    to {
      -webkit-transform: scale(1, 1);
              transform: scale(1, 1);
      opacity: 1;
    }
  }
  @keyframes spWaveAf {
    from {
      -webkit-transform: scale(0.5, 0.5);
              transform: scale(0.5, 0.5);
      -webkit-transform: scale(0.5, 0.5);
              transform: scale(0.5, 0.5);
      opacity: 0;
    }
    to {
      -webkit-transform: scale(1, 1);
              transform: scale(1, 1);
      -webkit-transform: scale(1, 1);
              transform: scale(1, 1);
      opacity: 1;
    }
  }
  @-webkit-keyframes spWaveBe {
    from {
      -webkit-transform: scale(1, 1);
              transform: scale(1, 1);
      opacity: 1;
    }
    to {
      -webkit-transform: scale(1.5, 1.5);
              transform: scale(1.5, 1.5);
      opacity: 0;
    }
  }
  @keyframes spWaveBe {
    from {
      -webkit-transform: scale(1, 1);
              transform: scale(1, 1);
      opacity: 1;
    }
    to {
      -webkit-transform: scale(1.5, 1.5);
              transform: scale(1.5, 1.5);
      opacity: 0;
    }
  }






/*-----------------------------------------------------------------------*/
/**===== bars3 =====*/
#bars3 {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    height: 50px;
    width: 50px;
    margin: -25px 0 0 -25px;
  }
  
  #bars3 span {
    position: absolute;
    display: block;
    bottom: 10px;
    width: 9px;
    height: 15px;
    background: rgba(0, 0, 0, 0.25);
    -webkit-animation: bars3 2s  infinite ease-in;
            animation: bars3 2s  infinite ease-in;
  }
  
  #bars3 span:nth-child(2) {
    left: 11px;
    -webkit-animation-delay: 0.2s;
            animation-delay: 0.2s;
  }
  
  #bars3 span:nth-child(3) {
    left: 22px;
    -webkit-animation-delay: 0.4s;
            animation-delay: 0.4s;
  }
  
  #bars3 span:nth-child(4) {
    left: 33px;
    -webkit-animation-delay: 0.6s;
            animation-delay: 0.6s;
  }
  
  #bars3 span:nth-child(5) {
    left: 44px;
    -webkit-animation-delay: 0.8s;
            animation-delay: 0.8s;
  }
  
  @keyframes bars3 {
    0% {
      background: rgba(0, 0, 0, 0.25);
    }
    25% {
      background: #000000;
    }
    50% {
      background: rgba(0, 0, 0, 0.25);
    }
    100% {
      background: rgba(0, 0, 0, 0.25);
    }
  }
  @-webkit-keyframes bars3 {
    0% {
      background: rgba(0, 0, 0, 0.25);
    }
    25% {
      background: #000000;
    }
    50% {
      background: rgba(0, 0, 0, 0.25);
    }
    100% {
      background: rgba(0, 0, 0, 0.25);
    }
  }
  /** END of bars3 */


  .nomargin { margin: 0 }

  .center { 
    text-align: center;
  }